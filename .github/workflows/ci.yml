name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  rustfmt:
    runs-on: ubuntu-24.04

    steps:
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - uses: actions/checkout@v4

      - run: cargo fmt -- --check
  clippy:
    runs-on: ubuntu-24.04

    steps:
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: clippy

      - uses: actions/checkout@v4

      - run: cargo +nightly clippy -- --deny warnings
  ci:
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false

      matrix:
        include:
          - toolchain: stable
          - toolchain: stable
            features: no-std
          - toolchain: stable
            features: git
          - toolchain: stable
            features: vendored
          - toolchain: 1.64.0 # no-std MSRV
            features: no-std
          - toolchain: 1.58.0 # MSRV
          - toolchain: nightly
          - toolchain: nightly
            features: no-std

    steps:
      - run: sudo apt-get -qq install ccache libbotan-2-dev
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
            path: |
              ~/.cache/ccache
            key: linux-${{ matrix.toolchain }}-${{ matrix.features }}-${{ github.run_id }}
            restore-keys: |
               linux-${{ matrix.toolchain }}-${{ matrix.features }}
      - uses: dtolnay/rust-toolchain@master
        with:
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
      - run: ./.ci/build.py ${{ matrix.features }}

  ci_mac:
    runs-on: macos-latest

    strategy:
      fail-fast: false

      matrix:
        include:
          - toolchain: stable
            features: botan3
          - toolchain: stable
            features: vendored
          - toolchain: nightly
            features: botan3

    steps:
      - run: brew install ccache botan
      - run: ls -l /opt/homebrew/*
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
            path: |
              /Users/runner/Library/Caches/ccache
            key: mac-${{ matrix.toolchain }}-${{ matrix.features }}-${{ github.run_id }}
            restore-keys: |
               mac-${{ matrix.toolchain }}-${{ matrix.features }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - run: ./.ci/build.py ${{ matrix.features }}

  ci_windows:
    runs-on: windows-2022

    strategy:
      fail-fast: false

      matrix:
        include:
          - toolchain: stable
            features: vendored
#          - toolchain: nightly

    steps:
      - run: choco install -y sccache
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
            path: |
               C:/Users/runneradmin/AppData/Local/Mozilla/sccache/cache
            key: windows-${{ matrix.toolchain }}-${{ matrix.features }}-${{ github.run_id }}
            restore-keys: |
               windows-${{ matrix.toolchain }}-${{ matrix.features }}
      - uses: egor-tensin/vs-shell@v2
        with:
          arch: amd64
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - run: python3 ./.ci/build.py ${{ matrix.features }} --compiler-cache=sccache
